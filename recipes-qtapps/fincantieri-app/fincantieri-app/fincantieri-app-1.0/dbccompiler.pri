QT += serialbus

CONFIG(modbus): QT += serialport

DBC = $$files(*.dbc, false)
FIRSTDBC = $$first(DBC)

CONFIG(debug, debug|release) {
    DESTDIR = debug
} else {
    DESTDIR = release
}

INCLUDEPATH += $$DESTDIR

#VPATH = $$DESTDIR

###########################################

extraX.name = "============= (AT LEAST ONE $DBC) to mycan.cpp mycan.h ============="
extraX.input = FIRSTDBC #  consider only first dbc (generate only once)
extraX.output  = mycan.h mycan.cpp
extraX.commands = cantools generate_qt_can_source # -o $$DESTDIR
extraX.variable_out = MOCABLE GENERATED_SOURCES
#extraX.depends = FORCE
QMAKE_EXTRA_COMPILERS += extraX

###########################################

extraX2.name = "============= (AT LEAST ONE $DBC) to mymodbus.cpp mymodbus.h ============="
extraX2.input = FIRSTDBC #  consider only first dbc (generate only once)
extraX2.output  = mymodbus.h mymodbus.cpp
extraX2.commands = cantools generate_qt_modbus_source # -o $$DESTDIR
extraX2.variable_out = MOCABLE GENERATED_SOURCES
QMAKE_EXTRA_COMPILERS += extraX2

###########################################

extraY.name = "============= (AT LEAST ONE $DBC) to myabstractitemmodel.cpp myabstractitemmodel.h ============="
extraY.input = FIRSTDBC #  consider only first dbc (generate only once)
extraY.output  = myabstractitemmodel.h
extraY.commands = cantools generate_qt_model_source
extraY.variable_out = MOCABLE
QMAKE_EXTRA_COMPILERS += extraY

extraY2.name = "============= fake ============="
extraY2.input = FIRSTDBC
extraY2.output  = myabstractitemmodel.cpp
extraY2.commands = type nul >> ${QMAKE_FILE_OUT}
extraY2.variable_out = GENERATED_SOURCES
extraY2.depends = myabstractitemmodel.h
QMAKE_EXTRA_COMPILERS += extraY2


###########################################

extra1.name = "============= EVERY $DBC to <file>.c <file>.h ============="
extra1.input = DBC
extra1.output  = ${QMAKE_FILE_BASE}.c ${QMAKE_FILE_BASE}.h
extra1.commands = cantools generate_c_source --bit-fields --no-range-check --no-size-and-memset --no-strict ${QMAKE_FILE_IN}
extra1.variable_out = GENERATED_SOURCES HEADERS
#extra1.depends = FORCE
QMAKE_EXTRA_COMPILERS += extra1

###########################################

extra2.name = "============= EVERY $DBC to <file>_qt.cpp <file>_qt.h ============="
extra2.input = DBC
extra2.output  = ${QMAKE_FILE_BASE}_qt.h ${QMAKE_FILE_BASE}_qt.cpp # ${QMAKE_FILE_BASE}_qt_init.cpp
extra2.commands = cantools generate_qt_source ${QMAKE_FILE_IN} --signals all --bit-fields --no-strict --no-size-and-memset --no-floating-point-numbers
extra2.variable_out = MOCABLE GENERATED_SOURCES HEADERS
#extra2.depends = FORCE
QMAKE_EXTRA_COMPILERS += extra2

post2.name = "============= EVERY $DBC to <file>_qt_init.cpp ============="
post2.input = DBC
post2.output  = ${QMAKE_FILE_BASE}_qt_init.cpp
post2.commands = type nul >> ${QMAKE_FILE_OUT}
post2.variable_out = GENERATED_SOURCES
post2.depends = ${QMAKE_FILE_BASE}_qt.h
QMAKE_EXTRA_COMPILERS += post2

###########################################

extra3.name = "============= MOC of header autogenerated cantools file ============="
extra3.input = MOCABLE
extra3.output  = $$DESTDIR/moc_${QMAKE_FILE_BASE}.cpp
extra3.commands = if "${QMAKE_FILE_EXT}==.h" ( moc.exe $(DEFINES) $(INCLUDEPATH) ${QMAKE_FILE_IN} -o ${QMAKE_FILE_OUT} )
extra3.variable_out = GENERATED_SOURCES
QMAKE_EXTRA_COMPILERS += extra3

###########################################

GENERATED_SOURCES ~= s/w+.h/
MOCABLE ~= s/w+.cp*/
HEADERS ~= s/w+.cp*/
